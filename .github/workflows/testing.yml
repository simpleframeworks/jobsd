name: testing

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  sqlite:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        go: ['1.16', '1.15', '1.14']
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  postgres:
    strategy:
      matrix:
        platform: [ubuntu-latest, macos-latest]
        go: ['1.16', '1.15', '1.14']
        dbversion: ['postgres:latest', 'postgres:11', 'postgres:10']
    runs-on: ${{ matrix.platform }}
    
    services:
      postgres:
        image: ${{ matrix.dbversion }}
        env:
          POSTGRES_PASSWORD: jobsd
          POSTGRES_USER: jobsd
          POSTGRES_DB: jobsd
        ports:
          - 25432:5432
        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Build
      run: go build -v ./...

    - name: Test
      env:
        JOBSD_DB: postgres
        JOBSD_PG_HOST: localhost
        JOBSD_PG_PORT: 25432
        JOBSD_PG_PASSWORD: jobsd
        JOBSD_PG_USER: jobsd
        JOBSD_PG_DB: jobsd
      run: go test -v ./...
