name: tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  sqlite:
    strategy:
      matrix:
        go: ['1.16', '1.15', '1.14']
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Build
      run: go build -v ./...

    - name: Test
      run: go test -v ./...

  postgres:
    strategy:
      matrix:
        dbversion: ['postgres:latest', 'postgres:11', 'postgres:10']
        go: ['1.16', '1.15', '1.14']
        platform: [ubuntu-latest, macos-latest]
    runs-on: ${{ matrix.platform }}

    postgres:
      image: ${{ matrix.dbversion }}
      env:
        POSTGRES_PASSWORD: jobsd
        POSTGRES_USER: jobsd
        POSTGRES_DB: jobsd
      ports:
        - 5432:5432
      # Set health checks to wait until postgres has started
      options: >-
        --health-cmd pg_isready
        --health-interval 10s
        --health-timeout 5s
        --health-retries 5

    steps:
    - uses: actions/checkout@v2

    - name: Set up Go
      uses: actions/setup-go@v2
      with:
        go-version: ${{ matrix.go }}

    - name: Build
      run: go build -v ./...

    - name: Test
      env:
        JOBSD_DB: postgres
        JOBSD_PG_HOST: localhost
        JOBSD_PG_PORT: 5432
        JOBSD_PG_PASSWORD: jobsd
        JOBSD_PG_USER: jobsd
        JOBSD_PG_DB: jobsd
      run: go test -v ./...
